***********************************************************
 Promises 
***********************************************************
Bundle packages in the context of agent

   ARGS:

   {
   TYPE: vars

      vars promise by 'match_package' (implicit) if context is any

              slist =>  {'SUNWxwsvr','SUNWxwts','SUNWxwpsr'}       if body context any
            Promise (version not specified) belongs to bundle 'packages' (type agent) in file '../tests/units/unit_package_solaris.cf' near line 19


   TYPE: packages

      packages promise by '$(match_package)' (implicit) if context is any

         package_policy => add       if body context any
         package_method => solaris body for type package_method(no parameters)
               {
               package_changes => individual if sub-body context any
               package_list_command => /usr/bin/pkginfo -l if sub-body context any
               package_multiline_start => \s*PKGINST:\s+[^\s]+ if sub-body context any
               package_list_name_regex => \s*PKGINST:\s+([^\s]+) if sub-body context any
               package_list_version_regex => \s*VERSION:\s+([^\s]+) if sub-body context any
               package_list_arch_regex => \s*ARCH:\s+([^\s]+) if sub-body context any
               package_installed_regex => .* if sub-body context any
               package_name_convention => $(name) if sub-body context any
               package_add_command => /usr/bin/pkgadd -d if sub-body context any
               package_delete_command => /bin/pkgrm if sub-body context any
               }
       if body context any
            Promise (version not specified) belongs to bundle 'packages' (type agent) in file '../tests/units/unit_package_solaris.cf' near line 28


   }




All Bodies

control body for type common(no parameters)
   {
   bundlesequence =>  {'packages'} if sub-body context any
   }

solaris body for type package_method(no parameters)
   {
   package_changes => individual if sub-body context any
   package_list_command => /usr/bin/pkginfo -l if sub-body context any
   package_multiline_start => \s*PKGINST:\s+[^\s]+ if sub-body context any
   package_list_name_regex => \s*PKGINST:\s+([^\s]+) if sub-body context any
   package_list_version_regex => \s*VERSION:\s+([^\s]+) if sub-body context any
   package_list_arch_regex => \s*ARCH:\s+([^\s]+) if sub-body context any
   package_installed_regex => .* if sub-body context any
   package_name_convention => $(name) if sub-body context any
   package_add_command => /usr/bin/pkgadd -d if sub-body context any
   package_delete_command => /bin/pkgrm if sub-body context any
   }

