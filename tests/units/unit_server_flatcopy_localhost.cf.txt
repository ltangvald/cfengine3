***********************************************************
 Promises 
***********************************************************
Bundle testbundle in the context of agent

   ARGS:

   {
   TYPE: files

      files promise by '/home/mark/tmp/testflatcopy' (implicit) if context is any

            comment => test copy promise       if body context any
          copy_from => mycopy body for type copy_from
               arg from
               arg server

               {
               source => $(from) if sub-body context any
               servers =>  {'$(server)'} if sub-body context any
               compare => digest if sub-body context any
               verify => true if sub-body context any
               copy_backup => true if sub-body context any
               purge => false if sub-body context any
               type_check => true if sub-body context any
               force_ipv4 => true if sub-body context any
               trustkey => true if sub-body context any
               collapse_destination_dir => true if sub-body context any
               }
              perms => system body for type perms(no parameters)
               {
               mode => 0644 if sub-body context any
               }
       if body context any
         depth_search => recurse body for type depth_search
               arg d

               {
               depth => $(d) if sub-body context any
               }
            classes => satisfied body for type classes
               arg x

               {
               promise_repaired =>  {'$(x)'} if sub-body context any
               persist_time => 0 if sub-body context any
               }
            Promise (version 1.2.3) belongs to bundle 'testbundle' (type agent) in file '../tests/units/unit_server_flatcopy_localhost.cf' near line 33


      files promise by '/home/mark/tmp/testcopy/single_file' (implicit) if context is any

            comment => test copy promise       if body context any
          copy_from => mycopy body for type copy_from
               arg from
               arg server

               {
               source => $(from) if sub-body context any
               servers =>  {'$(server)'} if sub-body context any
               compare => digest if sub-body context any
               verify => true if sub-body context any
               copy_backup => true if sub-body context any
               purge => false if sub-body context any
               type_check => true if sub-body context any
               force_ipv4 => true if sub-body context any
               trustkey => true if sub-body context any
               collapse_destination_dir => true if sub-body context any
               }
              perms => system body for type perms(no parameters)
               {
               mode => 0644 if sub-body context any
               }
       if body context any
            Promise (version 1.2.3) belongs to bundle 'testbundle' (type agent) in file '../tests/units/unit_server_flatcopy_localhost.cf' near line 42


   TYPE: reports

      reports promise by 'Files were copied..' (implicit) if context is copy_ok

            Promise (version 1.2.3) belongs to bundle 'testbundle' (type agent) in file '../tests/units/unit_server_flatcopy_localhost.cf' near line 50


   }


Bundle access_rules in the context of server

   ARGS:

   {
   TYPE: access

      access promise by '/home/mark/LapTop' (implicit) if context is any

              admit =>  {'127.0.0.1'}       if body context any
            Promise (version 1.2.3) belongs to bundle 'access_rules' (type server) in file '../tests/units/unit_server_flatcopy_localhost.cf' near line 115


   }




All Bodies

control body for type common(no parameters)
   {
   bundlesequence =>  {'testbundle'} if sub-body context any
   version => 1.2.3 if sub-body context any
   }

system body for type perms(no parameters)
   {
   mode => 0644 if sub-body context any
   }

recurse body for type depth_search
   arg d

   {
   depth => $(d) if sub-body context any
   }

mycopy body for type copy_from
   arg from
   arg server

   {
   source => $(from) if sub-body context any
   servers =>  {'$(server)'} if sub-body context any
   compare => digest if sub-body context any
   verify => true if sub-body context any
   copy_backup => true if sub-body context any
   purge => false if sub-body context any
   type_check => true if sub-body context any
   force_ipv4 => true if sub-body context any
   trustkey => true if sub-body context any
   collapse_destination_dir => true if sub-body context any
   }

satisfied body for type classes
   arg x

   {
   promise_repaired =>  {'$(x)'} if sub-body context any
   persist_time => 0 if sub-body context any
   }

control body for type server(no parameters)
   {
   allowconnects =>  {'127.0.0.1','::1'} if sub-body context any
   allowallconnects =>  {'127.0.0.1','::1'} if sub-body context any
   trustkeysfrom =>  {'127.0.0.1','::1'} if sub-body context any
   }

