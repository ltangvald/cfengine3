#######################################################
#
# Delete a line, set a class
# select_region, doesn't include header or trailer
#
#######################################################

body common control
{
  inputs => { "../../default.cf" };
  bundlesequence  => { "g", default("$(this.promise_filename)") };   
  version => "1.0";
nova_edition::
  host_licenses_paid => "5";
}

bundle common g
{
vars:
	"testfile" string => "/tmp/TEST.cfengine";
}

#######################################################

bundle agent init
{
vars:
	"states" slist => { "actual", "expected" };

	"actual" string =>
"header
header
BEGIN
    One potato
    Two potato
    Three potatoe
    Four
END
trailer
trailer";
 
	"expected" string =>
"header
header
BEGIN
    One potato
    Two potato
    Four
END
trailer
trailer";
 
files:
	"$(g.testfile).$(states)"
	    create => "true",
	    edit_line => init_insert("$(init.$(states))"),
	    edit_defaults => init_empty;
}

bundle edit_line init_insert(str)
{
insert_lines:
	"$(str)";
}

body edit_defaults init_empty
{
	empty_file_before_editing => "true";
}

#######################################################

bundle agent test
{
vars:
      "tstr" string => "    Three potatoe";
 
files:
	"$(g.testfile).actual"
	    edit_line => test_delete("$(test.tstr)");

}

bundle edit_line test_delete(str)
{
delete_lines:
	"$(str)"
	    classes => test_class("ok"),
	    select_region => test_select;
}

body select_region test_select
{
select_start => "BEGIN";
select_end => "END";
}


body classes test_class(a)
{
promise_repaired => { "$(a)" };
}


#######################################################

bundle agent check
{
reports:
    ok::
	"$(this.promise_filename) Pass";
    MAIN.ok::
	"$(this.promise_filename) Pass"
		report_to_file => "$(G.logfile)";
    !ok::
	"$(this.promise_filename) FAIL";
    MAIN.!ok::
	"$(this.promise_filename) FAIL"
		report_to_file => "$(G.logfile)";
}

#######################################################

bundle agent fini
{
methods:
	"any" usebundle => default_fini("$(g.testfile)");
}
