#  Copyright (C) Cfengine AS

#  This file is part of Cfengine 3 - written and maintained by Cfengine AS.

#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; version 3.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA

# To the extent this program is licensed as part of the Enterprise
# versions of Cfengine, the applicable Commerical Open Source License
# (COSL) may apply to this file if you as a licensee so wish it. See
# included file COSL.txt.

#
# Routing and switching configuration is a bundle
# of promises made by autonomous interfaces
#

bundle cfagent transport()

{
interfaces:

  linux::

    "eth0"

        ip           => dhcp(),
        defaultroute => "$(my_def_route)";


   junos.hio_data::

     "ge-1/3/0"

         defaultroute => "$(my_def_route)",
         vlan         => my_vlan(),
         ospf         => my_ospf(),
         bgp          => my_bgp(),
         isis         => uninett();

}

########################################################

body ip dhcp()

{
# probably does nothing..., but to invoke broken promises
# we could note

address   => "nop";
netmask   => "nop";
broadcast => "nop";
}

########################################################

body ip address_special()

{
# probably does nothing..., but to invoke broken promises
# we could note

v4_addresses   => { "128.39.89.10/24" };
v4_broadcast   => "nop";
v6_addresses   => { "2001:...", "2010:..." }
}


########################################################

body vlan my_vlan()

{
id      => "200";
tagging => "true";  # or method => tagging?
}