#  Copyright (C) Cfengine AS

#  This file is part of Cfengine 3 - written and maintained by Cfengine AS.

#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; version 3.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA

# To the extent this program is licensed as part of the Enterprise
# versions of Cfengine, the applicable Commerical Open Source License
# (COSL) may apply to this file if you as a licensee so wish it. See
# included file COSL.txt.

####################################################################
#
# Exo-cartography
#
# This is a way of documenting and checking promise syntax for 
# services that are not part of cfengine's realm of responsibility
# We can check syntax and various other graphical relationships
# like broken promises
#
####################################################################

bundle external ExoCartography()

{
# Suppose we measure a threshold value $(load_avg)

graph:

  any::   # classes relate to where these promises are known
          # not to be confused with the hosts promising

  # List the various conduits in the network
  # promise from nexus to cube

  # Calculate the degree distribution

  "sphere" -> "cube"

     label     => "+nfs",
     weight    => "0.4",
     value     => "6.4";

  "sphere" -> "nexus"

     label     => "+nfs",
     weight    => "0.4",

     # allow all of these simultaneously

     s_tau  => {},
     s_chi  => {},  # regex

     i_tau  => { "1", "2"},
     i_chi  => {},  # ranges

     r_tau  => { "0,5"},     # load average
     r_chi  => { "0,2.2" };  # ranges

  "cube" -> { "nexus", "slogans", "others" }

       type => "-nfs";   # default weight = 1.0

##############################################################

sla:

  #
  # What can we put in here?
  #

  "HIO" -> "opera"

     tau => "http response time",
     real_chi => { "0 , 0.0001" },
     str_chi => { "^(NaN)" },
     availability => "$(www_avail)";

##############################################################

inventory:

  "server equipment" -> "CMDB"

    cost      => "34",
    value     => "10000",  # reorder value for batch of paper
    currency  => "kroner",
    level     => "$(scli.paper_level)"
    threshold => "10367";


}

##############################################################

body cmdb ITILstuff(var)

{
serial_number => "$(var)";
category => "";
model => "";
warrant_expire => "";
version => "";
location => "";
CIowner => "";
source => "";
license => "";
status => "";
comment => "";
}



