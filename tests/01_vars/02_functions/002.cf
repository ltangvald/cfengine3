#######################################################
#
# Test getgid()
#
#######################################################

body common control
{
  inputs => { "../../default.cf" };
  bundlesequence  => { "g", default("$(this.promise_filename)") };   
  version => "1.0";
nova_edition::
  host_licenses_paid => "5";
}

bundle common g
{
vars:
	"dummy" string => "dummy";
}

#######################################################

bundle agent init
{
vars:
	"dummy" string => "dummy";
}

#######################################################

bundle agent test
{
vars:
  linux|freebsd::
    "gid_daemon" int => getgid("daemon");
    "gid_sys" int => getgid("sys");
  !linux.!freebsd::
    "gid_daemon" string => "fixme";
    "gid_sys" string => "fixme";

  linux::
    "gid_0" int => getgid("root");
  freebsd::
    "gid_0" int => getgid("wheel");
  !linux.!freebsd::
    "gid_0" string => "fixme";

  SuSE|redhat::
    "num_daemon" int => "2";
  (linux.!SuSE.!redhat)|freebsd::
    "num_daemon" int => "1";
  !linux.!freebsd::
    "num_daemon" string => "fixme";

  linux|freebsd::
    "num_sys" int => "3";
  !linux.!freebsd::
    "num_sys" string => "fixme";
}

#######################################################

bundle agent check
{
classes:
	"ok" and => {
		    strcmp("$(test.gid_0)", "0"),
		    strcmp("$(test.gid_daemon)", "$(test.num_daemon)"),
		    strcmp("$(test.gid_sys)", "$(test.num_sys)"),
		    };

reports:
    DEBUG::
	"root/wheel is GID $(test.gid_0), expected 0";
	"daemon is GID $(test.gid_daemon), expected $(test.num_daemon)";
	"sys is GID $(test.gid_sys), expected $(test.num_sys)";
    ok::
	"$(this.promise_filename) Pass";
    !ok::
	"$(this.promise_filename) FAIL";
}

#######################################################

bundle agent fini
{
vars:
	"dummy" string => "dummy";
}
