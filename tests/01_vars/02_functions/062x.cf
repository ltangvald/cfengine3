#######################################################
#
# Test accumulated()
#
#######################################################

body common control
{
  inputs => { "../../default.cf" };
  bundlesequence  => { "g", default("$(this.promise_filename)") };   
  version => "1.0";
nova_edition::
  host_licenses_paid => "5";
}

bundle common g
{
vars:
	"testfile" string => "/tmp/TEST.cfengine";
}

#######################################################

bundle agent init
{
vars:
	"dummy" string => "dummy";
}

#######################################################

bundle agent test
{
vars:
	"time" int => accumulated(0,1000,1000,1000,1001,40000);
}

#######################################################

bundle agent check
{
vars:
	"time" int => "2682100000";	# 1 year == 365 days

classes:
	"ok" expression => strcmp("$(time)", "$(test.time)");

reports:
    DEBUG::
	"time: $(time)";
	"test.time: $(test.time)";
    ok::
	"$(this.promise_filename) Pass";
    MAIN.ok::
	"$(this.promise_filename) Pass"
		report_to_file => "$(G.logfile)";
    !ok::
	"$(this.promise_filename) FAIL";
    MAIN.!ok::
	"$(this.promise_filename) FAIL"
		report_to_file => "$(G.logfile)";
}

#######################################################

bundle agent fini
{
methods:
	"any" usebundle => default_fini("$(g.testfile)");
}
